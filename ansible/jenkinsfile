node {
 try  {
 notify('Job Started') 

     
  stage('Git-Checkout') {
   git 'https://github.com/chakri1998/ansiblemusicstore.git'
  }
      
     
    stage('Jfrog Artifactory download'){
    def server= Artifactory.server 'Artifactory'
    def downloadSpec = """{
    "files": [
    {
      "pattern": "Kalingamusic/*.war",
      "target": "/home/mtadminnuvepro/artifacts/"
      
    }
    ]
    }"""
    server.download(downloadSpec)
   
}

  stage('Geting Ready For Ansible') {
  sh label: 'Docker', script: 'cp -rf target/*.war terraform/ansible-deploy/ansible/tomcat/templates/'
  sh label: 'Jenkins', script: "echo '<h1> TASK BUILD ID: ${env.BUILD_DISPLAY_NAME}</h1>' > ansible/index.html"
  sh label: 'terraform', script: 'ansible-playbook -i /root/.jenkins/workspace/terraform/jenkins-ci.ini -u ubuntu --key /root/.ssh/capstone301 web-playbook.yaml'
}  
   
 }

notify('Job Completed')   
} catch (err) {
  notify("Error ${err}")
  currentBuild.result = 'FAILURE'
}
}

def notify(status){
    emailext (
	to: "pattnaikabhishek1996@gmail.com",
	subject: "${status}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
	 body: """<p>${status}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
	<p>Check console output at <a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a></p>""",
		)
	}
